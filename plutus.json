{
  "preamble": {
    "title": "fluidtokens/ft_cardano_automatic_sc_mvp",
    "description": "Aiken contracts for project 'fluidtokens/ft_cardano_automatic_sc_mvp'",
    "version": "0.0.0",
    "plutusVersion": "v2",
    "compiler": {
      "name": "Aiken",
      "version": "v1.0.20-alpha+unknown"
    },
    "license": "Apache-2.0"
  },
  "validators": [
    {
      "title": "counter.counter",
      "datum": {
        "title": "datum",
        "schema": {
          "$ref": "#/definitions/counter~1Datum"
        }
      },
      "redeemer": {
        "title": "redeemer",
        "schema": {
          "$ref": "#/definitions/counter~1Redeemer"
        }
      },
      "compiledCode": "590229010000323232323232323222232325333008323232533300b3370e9001000899299980619251375860206022602260146002601400e2664464a66601e66e1d2000300e00113322323300100100322533301600114a026464a66602a66e3c008014528899802002000980c8011bae30170013758602660286028602860286028602860286028601a0066eb8c04cc03400458c00cc030004c004c02801cc010c028024528118080008a503009001300130070042300d300e00114984d958c94ccc020cdc3a40000022a666016600c0082930b0b1803001999119299980499b87480000044c8c8c8c94ccc040c0480084c92632533300e3370e9000000899191919299980a980b8010991924c64a66602866e1d2000001132325333019301b002132498c94ccc05ccdc3a400000226464a666038603c0042649318098008b180e000980a8010a99980b99b87480080044c8c8c8c8c8c94ccc080c08800852616375a604000260400046eb4c078004c078008dd6980e000980a8010b180a8008b180c80098090018a99980a19b874800800454ccc05cc04800c52616163012002300c00316301500130150023013001300c00216300c0011630100013010002375a601c002600e0042c600e002464a66601066e1d200000113232533300d300f002149858dd7180680098030010a99980419b87480080044c8c94ccc034c03c00852616375c601a002600c0042c600c0020064600a6ea80048c00cdd5000ab9a5573aaae7955cfaba15745",
      "hash": "1038433b54e2b21c57a96793b212d5f50e98c993c7d944d3cd886e13"
    }
  ],
  "definitions": {
    "ByteArray": {
      "dataType": "bytes"
    },
    "Int": {
      "dataType": "integer"
    },
    "Option$aiken/transaction/credential/Referenced$aiken/transaction/credential/Credential": {
      "title": "Optional",
      "anyOf": [
        {
          "title": "Some",
          "description": "An optional value.",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "$ref": "#/definitions/aiken~1transaction~1credential~1Referenced$aiken~1transaction~1credential~1Credential"
            }
          ]
        },
        {
          "title": "None",
          "description": "Nothing.",
          "dataType": "constructor",
          "index": 1,
          "fields": []
        }
      ]
    },
    "aiken/transaction/credential/Address": {
      "title": "Address",
      "description": "A Cardano `Address` typically holding one or two credential references.\n\n Note that legacy bootstrap addresses (a.k.a. 'Byron addresses') are\n completely excluded from Plutus contexts. Thus, from an on-chain\n perspective only exists addresses of type 00, 01, ..., 07 as detailed\n in [CIP-0019 :: Shelley Addresses](https://github.com/cardano-foundation/CIPs/tree/master/CIP-0019/#shelley-addresses).",
      "anyOf": [
        {
          "title": "Address",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "payment_credential",
              "$ref": "#/definitions/aiken~1transaction~1credential~1Credential"
            },
            {
              "title": "stake_credential",
              "$ref": "#/definitions/Option$aiken~1transaction~1credential~1Referenced$aiken~1transaction~1credential~1Credential"
            }
          ]
        }
      ]
    },
    "aiken/transaction/credential/Credential": {
      "title": "Credential",
      "description": "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
      "anyOf": [
        {
          "title": "VerificationKeyCredential",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "$ref": "#/definitions/ByteArray"
            }
          ]
        },
        {
          "title": "ScriptCredential",
          "dataType": "constructor",
          "index": 1,
          "fields": [
            {
              "$ref": "#/definitions/ByteArray"
            }
          ]
        }
      ]
    },
    "aiken/transaction/credential/Referenced$aiken/transaction/credential/Credential": {
      "title": "Referenced",
      "description": "Represent a type of object that can be represented either inline (by hash)\n or via a reference (i.e. a pointer to an on-chain location).\n\n This is mainly use for capturing pointers to a stake credential\n registration certificate in the case of so-called pointer addresses.",
      "anyOf": [
        {
          "title": "Inline",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "$ref": "#/definitions/aiken~1transaction~1credential~1Credential"
            }
          ]
        },
        {
          "title": "Pointer",
          "dataType": "constructor",
          "index": 1,
          "fields": [
            {
              "title": "slot_number",
              "$ref": "#/definitions/Int"
            },
            {
              "title": "transaction_index",
              "$ref": "#/definitions/Int"
            },
            {
              "title": "certificate_index",
              "$ref": "#/definitions/Int"
            }
          ]
        }
      ]
    },
    "counter/Datum": {
      "title": "Datum",
      "anyOf": [
        {
          "title": "Datum",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "counter",
              "$ref": "#/definitions/Int"
            },
            {
              "title": "allowedActor",
              "$ref": "#/definitions/aiken~1transaction~1credential~1Address"
            }
          ]
        }
      ]
    },
    "counter/Redeemer": {
      "title": "Redeemer",
      "anyOf": [
        {
          "title": "IncreaseCounter",
          "dataType": "constructor",
          "index": 0,
          "fields": []
        }
      ]
    }
  }
}